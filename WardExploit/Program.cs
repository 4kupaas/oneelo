using System;
using EloBuddy;
using EloBuddy.SDK;
using EloBuddy.SDK.Events;

namespace WardExploit
{
    internal class Program
    {
        public static AIHeroClient player => Player.Instance;

        private static void Main(string[] args)
        {
            Loading.OnLoadingComplete += Loading_OnLoadingComplete;
        }

        private static void Loading_OnLoadingComplete(EventArgs args)
        {
            MenuHandler.Initialize();
            Game.OnTick += Game_OnTick;
        }

        private static void Game_OnTick(EventArgs args)
        {
            // check player is at shop
            if (!player.IsInShopRange() && Game.MapId != GameMapId.SummonersRift)
                return;

            // trinket ids
            const int totem = 3340;
            const int lens = 3341;
            const int farsight = 3363;
            const int oracle = 3364;

            InventorySlot[] inv = player.InventoryItems;

            foreach (var item in inv)
            {
                if (item.Id == ItemId.Warding_Totem_Trinket || item.Id == ItemId.Sweeping_Lens_Trinket || item.Id == ItemId.Greater_Vision_Totem_Trinket || item.Id == ItemId.Greater_Stealth_Totem_Trinket)
                    if (MenuHandler.GetCheckboxValue(MenuHandler.mainMenu, "Only purchase if off cooldown")
                        && item.CanUseItem() && player.IsInShopRange())
                        return;
            }

            // If no item is in trinket slot
            if (!player.HasItem(totem) && !player.HasItem(lens) && !player.HasItem(farsight) && !player.HasItem(oracle))
                Shop.BuyItem(totem);

            switch (MenuHandler.sliderValue)
            {
                case 0:
                    if (!player.HasItem(totem))
                        Shop.BuyItem(totem);
                    break;
                case 1:
                    if (!player.HasItem(lens))
                        Shop.BuyItem(lens);
                    break;
                case 2:
                    if (!player.HasItem(farsight))
                        Shop.BuyItem(farsight);
                    break;
                case 3:
                    if (!player.HasItem(oracle))
                        Shop.BuyItem(oracle);
                    break;
            }
        }
    }
}